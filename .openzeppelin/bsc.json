{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xD774b89a621C2a6595b80CE260F7165a9A7A3846",
      "txHash": "0x7476f2716093147b2a68fca28ab5ad987289466239b372e7baeabaa2dcae6e8d",
      "kind": "uups"
    }
  ],
  "impls": {
    "62c9f7944985b5806768c144eb7802ffebe5e6608930775a6dfb4e26ba589f14": {
      "address": "0xc12d5290b25Ec7132845f91f9729fB1AF92cf233",
      "txHash": "0xa5830518dc8d21b1a030824004d3bd466b6e17656d191e430e14bb0b4ad717d6",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "bridgeOperator",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:36"
          },
          {
            "label": "totalACGWrapped",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:39"
          },
          {
            "label": "totalACGUnwrapped",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:42"
          },
          {
            "label": "processedRequests",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:48"
          },
          {
            "label": "emergencyRecovery",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:51"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:54"
          },
          {
            "label": "dailyMintAmounts",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:57"
          },
          {
            "label": "dailyBurnAmounts",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:60"
          },
          {
            "label": "dailyMintLimit",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:63"
          },
          {
            "label": "dailyBurnLimit",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "WrappedACG",
            "src": "contracts/WrappedACG.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)417_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)481_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
